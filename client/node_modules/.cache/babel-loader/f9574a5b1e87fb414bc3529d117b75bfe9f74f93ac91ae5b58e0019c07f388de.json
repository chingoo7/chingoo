{"ast":null,"code":"var _jsxFileName = \"/Users/chingoo/Documents/get this right/client/src/components/Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport InputForm from './InputForm';\nimport Chart from './Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const [data, setData] = useState({\n    cashflowIncome: [],\n    cashflowExpense: [],\n    assets: [],\n    liabilities: []\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const saveData = async updatedData => {\n    try {\n      await axios.post('/api/data', updatedData);\n      setData(updatedData);\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n  const calculateNetWorth = () => {\n    // Calculate net worth projection for 30 years\n    const netWorthProjection = [];\n    let currentAssets = data.assets.reduce((sum, asset) => sum + asset.value, 0);\n    let currentLiabilities = data.liabilities.reduce((sum, liability) => sum + liability.value, 0);\n    for (let year = 1; year <= 30; year++) {\n      const yearlyIncome = data.cashflowIncome.reduce((sum, income) => sum + income.value, 0);\n      const yearlyExpense = data.cashflowExpense.reduce((sum, expense) => sum + expense.value, 0);\n      const yearlyNetCashflow = yearlyIncome - yearlyExpense;\n      currentAssets *= 1 + data.assets.reduce((sum, asset) => sum + asset.growthRate, 0) / 100;\n      currentLiabilities *= 1 + data.liabilities.reduce((sum, liability) => sum + liability.interestRate, 0) / 100;\n      const netWorth = currentAssets - currentLiabilities + yearlyNetCashflow;\n      netWorthProjection.push({\n        year,\n        netWorth\n      });\n    }\n    return netWorthProjection;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projection-based Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      data: data,\n      onSave: saveData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: calculateNetWorth()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"c4DR1ix+P0Yf/xYe+cKls2rXi2g=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useEffect","axios","InputForm","Chart","jsxDEV","_jsxDEV","Calculator","_s","data","setData","cashflowIncome","cashflowExpense","assets","liabilities","fetchData","response","get","error","console","saveData","updatedData","post","calculateNetWorth","netWorthProjection","currentAssets","reduce","sum","asset","value","currentLiabilities","liability","year","yearlyIncome","income","yearlyExpense","expense","yearlyNetCashflow","growthRate","interestRate","netWorth","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","_c","$RefreshReg$"],"sources":["/Users/chingoo/Documents/get this right/client/src/components/Calculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport InputForm from './InputForm';\nimport Chart from './Chart';\n\nconst Calculator = () => {\n  const [data, setData] = useState({\n    cashflowIncome: [],\n    cashflowExpense: [],\n    assets: [],\n    liabilities: [],\n  });\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/data');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const saveData = async (updatedData) => {\n    try {\n      await axios.post('/api/data', updatedData);\n      setData(updatedData);\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n\n  const calculateNetWorth = () => {\n    // Calculate net worth projection for 30 years\n    const netWorthProjection = [];\n    let currentAssets = data.assets.reduce((sum, asset) => sum + asset.value, 0);\n    let currentLiabilities = data.liabilities.reduce((sum, liability) => sum + liability.value, 0);\n\n    for (let year = 1; year <= 30; year++) {\n      const yearlyIncome = data.cashflowIncome.reduce((sum, income) => sum + income.value, 0);\n      const yearlyExpense = data.cashflowExpense.reduce((sum, expense) => sum + expense.value, 0);\n      const yearlyNetCashflow = yearlyIncome - yearlyExpense;\n\n      currentAssets *= (1 + data.assets.reduce((sum, asset) => sum + asset.growthRate, 0) / 100);\n      currentLiabilities *= (1 + data.liabilities.reduce((sum, liability) => sum + liability.interestRate, 0) / 100);\n\n      const netWorth = currentAssets - currentLiabilities + yearlyNetCashflow;\n      netWorthProjection.push({ year, netWorth });\n    }\n\n    return netWorthProjection;\n  };\n\n  return (\n    <div>\n      <h1>Projection-based Calculator</h1>\n      <InputForm data={data} onSave={saveData} />\n      <Chart data={calculateNetWorth()} />\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}